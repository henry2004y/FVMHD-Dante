function [stateNew_GV] = update_state(grid,state_GV,faceFlux,source,dt)
%UPDATE_STATE Update the state variables in one timestep
%
%INPUTS:
% grid:     class of grid
% state_VG: state variables
% faceFlux: class of fluxes
% source:   class of sources
% dt:       timestep
%OUTPUTS:
% stateNew_VG: updated states
%
% Hongyang Zhou, hyzhou@umich.edu 

stateNew_GV = state_GV;
source_GV   = source.source_GV;

CellSize_D = grid.CellSize_D;

iMin = Parameters.iMin;
iMax = Parameters.iMax;
jMin = Parameters.jMin;
jMax = Parameters.jMax;
kMin = Parameters.kMin;
kMax = Parameters.kMax;
Rho_ = Parameters.Rho_;
P_   = Parameters.P_;
E_   = Parameters.E_;
U_   = Parameters.U_;
B_   = Parameters.B_;
Bz_  = Parameters.Bz_;

Flux_XV = faceFlux.Flux_XV;
Flux_YV = faceFlux.Flux_YV;
Flux_ZV = faceFlux.Flux_ZV;

if strcmp(Parameters.GridType,'Cartesian')
   % no need for volume and face
  
   if ~Parameters.UseConservative
      stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,:) = ...
         state_GV(iMin:iMax,jMin:jMax,kMin:kMax,:) - dt.*(...
         (Flux_XV(2:end,:,:,:) - Flux_XV(1:end-1,:,:,:))/CellSize_D(1) +...
         (Flux_YV(:,2:end,:,:) - Flux_YV(:,1:end-1,:,:))/CellSize_D(2) +...
         (Flux_ZV(:,:,2:end,:) - Flux_ZV(:,:,1:end-1,:))/CellSize_D(3))+...
         source_VG;
   else
      stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,Rho_:Bz_) = ...
         state_GV(iMin:iMax,jMin:jMax,kMin:kMax,Rho_:Bz_) - dt.*(...
         (Flux_XV(2:end,:,:,Rho_:Bz_) - Flux_XV(1:end-1,:,:,Rho_:Bz_))/...
         CellSize_D(1) + ...
         (Flux_YV(:,2:end,:,Rho_:Bz_) - Flux_YV(:,1:end-1,:,Rho_:Bz_))/...
         CellSize_D(2) + ...
         (Flux_ZV(:,:,2:end,Rho_:Bz_) - Flux_ZV(:,:,1:end-1,Rho_:Bz_))/...
         CellSize_D(3))+ ...
         source_GV(:,:,:,Rho_:Bz_);
      
      gamma = Const.gamma;
      
      state_GV(iMin:iMax,jMin:jMax,kMin:kMax,E_) = ...
         state_GV(iMin:iMax,jMin:jMax,kMin:kMax,P_) / (gamma-1) + ...
         0.5./state_GV(iMin:iMax,jMin:jMax,kMin:kMax,Rho_).*...
         sum(state_GV(iMin:iMax,jMin:jMax,kMin:kMax,U_).^2,4) + ...
         0.5*sum(state_GV(iMin:iMax,jMin:jMax,kMin:kMax,B_),4);
              
      stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,E_) = ...
         state_GV(iMin:iMax,jMin:jMax,kMin:kMax,E_) - dt.*(...
         (Flux_XV(2:end,:,:,E_) - Flux_XV(1:end-1,:,:,E_))/...
         CellSize_D(1) + ...
         (Flux_YV(:,2:end,:,E_) - Flux_YV(:,1:end-1,:,E_))/...
         CellSize_D(2) + ...
         (Flux_ZV(:,:,2:end,E_) - Flux_ZV(:,:,1:end-1,E_))/...
         CellSize_D(3))+ ...
         source_GV(:,:,:,E_);
      
      stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,P_) = (gamma-1)* ...
         (stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,E_) - ...
         0.5./stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,Rho_).*...
         sum(stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,U_).^2,4) - ...
         0.5*sum(stateNew_GV(iMin:iMax,jMin:jMax,kMin:kMax,B_),4) );
   end
else
   % need volume and face
   stateNew_GV = 0;
   
end

end

